{"version":3,"file":"38cd667f7d33d944648b173888f589215ae6d4d9-4ca568e33902ec9e253d.js","mappings":"yMAMaA,EAAc,WACzB,OACE,QAACC,EAAD,KACGC,EAAAA,EAAAA,KAAY,YAA+B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IAC/B,OACE,QAAC,KAAD,CAAMC,GAAIH,EAAQE,IAAKA,GACpBD,QAQPH,GAAU,4WAqBCM,EAAAA,EAAAA,QArBD,4D,oBCbT,IAAMC,EAAW,SAACC,GACvB,OACE,QAACC,EAAD,MACE,QAAC,IAAD,CAAMC,QAAQ,SACd,QAACX,EAAD,OACA,QAAC,IAAD,CAAeY,MAAOH,EAAMG,MAAOC,MAAOJ,EAAMI,MAAOC,QAAQ,QAC/D,QAAC,IAAD,QAKAJ,GAAO,4a,SCVAK,EAAc,WACzB,OAA8BC,EAAAA,EAAAA,YAAWC,EAAAA,GAAjCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,UACVC,EAAkB,kBAAMD,GAAU,IACxC,OACE,QAACE,EAAD,CAAY,qBAAoBH,IAC9B,QAACI,EAAD,MACE,kCACA,gCACA,sCAEE,mBAFF,mBAMF,QAACC,EAAD,KACGrB,EAAAA,EAAAA,KAAY,YAAsC,IAAnCC,EAAkC,EAAlCA,OAAQqB,EAA0B,EAA1BA,MAAOpB,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACtC,OACE,QAAC,KAAD,CAAMC,GAAIH,EAAQE,IAAKA,EAAKoB,QAASL,IACnC,oBAAOhB,IACP,oBAAOoB,UASfH,GAAU,mHAKMd,EAAAA,EAAAA,QALN,0PAsBVe,GAAQ,yKAQQf,EAAAA,EAAAA,KARR,4BAWDA,EAAAA,EAAAA,MAXC,uMA+BRgB,GAAI,yRAgBKhB,EAAAA,EAAAA,MAhBL,4L,UCnFH,IAAMmB,EAAW,WACtB,OACE,QAACC,EAAD,MACE,QAACC,EAAD,KACGC,EAAAA,EAAAA,KAAkB,YAA+B,IAA5B1B,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,QAASC,EAAU,EAAVA,IACrC,OACE,QAAC,KAAD,CAAMC,GAAIH,EAAQE,IAAKA,GACpBD,QAKT,QAAC0B,EAAD,MACE,+CACA,+CAMFH,GAAO,6DACapB,EAAAA,EAAAA,KADb,qBAESA,EAAAA,EAAAA,MAFT,0EAUPqB,GAAU,uKASDrB,EAAAA,EAAAA,QATC,gEAqBVuB,GAAU,qK,UChDHC,EAAW,SAACtB,GACvB,OACE,QAAC,IAAD,MACE,QAAC,IAAD,CAAKuB,MAAOvB,EAAMuB,MAAOC,KAAK,QAC9B,QAACzB,EAAD,CAAUI,MAAOH,EAAMG,MAAOC,MAAOJ,EAAMI,SAC3C,QAACE,EAAD,OACA,QAACmB,EAAD,KAAQzB,EAAM0B,WACd,QAACT,EAAD,QAKAQ,GAAK","sources":["webpack://lime/./src/components/header/enHeaderNav.jsx","webpack://lime/./src/components/header/enHeader.jsx","webpack://lime/./src/components/nav/enGlobalNav.jsx","webpack://lime/./src/components/footer/enFooter.jsx","webpack://lime/./src/components/layout/enLayout.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../utils/color\";\nimport { NavList } from \"../../utils/navList\";\n\nexport const EnHeaderNav = () => {\n  return (\n    <SHeaderNav>\n      {NavList.map(({ enHref, enLabel, key }) => {\n        return (\n          <Link to={enHref} key={key}>\n            {enLabel}\n          </Link>\n        );\n      })}\n    </SHeaderNav>\n  );\n};\n\nconst SHeaderNav = styled.div`\n  height: 100%;\n  grid-area: headerNav;\n  display: flex;\n  justify-content: right;\n  margin-right: 2rem;\n  a {\n    height: 100%;\n    display: inline-flex;\n    align-items: center;\n    text-decoration: none;\n    font-size: 0.9rem;\n    font-weight: 700;\n    margin-right: 2rem;\n    transition: all 0.2s;\n    line-height: 1;\n    &:last-of-type {\n      margin-right: 0;\n    }\n    @media screen and (min-width: 1025px) {\n      &:hover {\n        color: ${Color.primary};\n      }\n    }\n  }\n  /* ---------- */\n  /* TB */\n  @media screen and (max-width: 1024px) {\n    display: none;\n  }\n`;\n","import React from \"react\";\nimport styled from \"@emotion/styled\";\nimport { Logo } from \"../logo/logo\";\nimport { EnHeaderNav } from \"./enHeaderNav\";\nimport { LangSwitchBtn } from \"../btn/langSwitchBtn\";\nimport { Hamburger } from \"../btn/hamburger\";\n\nexport const EnHeader = (props) => {\n  return (\n    <SHeader>\n      <Logo homeUrl=\"/en\" />\n      <EnHeaderNav />\n      <LangSwitchBtn jpUrl={props.jpUrl} enUrl={props.enUrl} langTxt=\"EN\" />\n      <Hamburger />\n    </SHeader>\n  );\n};\n\nconst SHeader = styled.header`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  display: grid;\n  align-items: center;\n  grid-template-columns: auto 1fr auto 48px;\n  grid-template-areas: \"logo headerNav langSwitch hamburger\";\n  height: 80px;\n  padding: 0 2rem;\n  background-color: #fff;\n  z-index: 100;\n  box-shadow: 0px 0px 16px -6px #666;\n  /* ---------- */\n  /* TB */\n  @media screen and (max-width: 1023px) {\n    padding: 0 1rem;\n  }\n  /* ---------- */\n  /* TB */\n  @media screen and (max-width: 599px) {\n    height: 64px;\n  }\n`;\n","import React from \"react\";\nimport { useContext } from \"react\";\nimport { NavToggleContext } from \"../providers/navToggleProvider\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../utils/color\";\nimport { NavList } from \"../../utils/navList\";\n\nexport const EnGlobalNav = () => {\n  const { toggle, setToggle } = useContext(NavToggleContext);\n  const onClickCloseNav = () => setToggle(false);\n  return (\n    <SGlobalNav data-toggle-state={!toggle}>\n      <SCompany>\n        <li>デマンドリンク株式会社</li>\n        <li>〒101-0032</li>\n        <li>\n          東京都千代田区岩本町2-2-10\n          <br />\n          日鉄岩本町ビルディング4F\n        </li>\n      </SCompany>\n      <SNav>\n        {NavList.map(({ enHref, label, enLabel, key }) => {\n          return (\n            <Link to={enHref} key={key} onClick={onClickCloseNav}>\n              <span>{enLabel}</span>\n              <span>{label}</span>\n            </Link>\n          );\n        })}\n      </SNav>\n    </SGlobalNav>\n  );\n};\n\nconst SGlobalNav = styled.nav`\n  position: fixed;\n  top: 80px;\n  height: calc(100vh - 80px);\n  width: 100%;\n  background-color: ${Color.primary};\n  display: flex;\n  overflow: hidden;\n  transition: all 0.2s;\n  z-index: 99;\n  &[data-toggle-state=\"true\"] {\n    transform: translateY(-100vh);\n  }\n  &[data-toggle-state=\"false\"] {\n    transform: translateY(0);\n  }\n  @media screen and (max-width: 599px) {\n    top: 64px;\n    height: calc(100vh - 64px);\n  }\n`;\n\nconst SCompany = styled.ul`\n  width: 40%;\n  padding: 2rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  list-style: none;\n  background-color: ${Color.dark};\n  li {\n    font-size: 1rem;\n    color: ${Color.light};\n    font-weight: 300;\n    text-align: center;\n    &:nth-of-type(1) {\n      font-weight: 500;\n    }\n    &:nth-of-type(2) {\n      margin-top: 1rem;\n    }\n  }\n  /* ---------- */\n  /* TB */\n  @media screen and (max-width: 1024px) {\n  }\n  /* TB */\n  @media screen and (max-width: 1023px) {\n    display: none;\n  }\n`;\n\nconst SNav = styled.div`\n  width: 60%;\n  padding: 2rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  a {\n    display: inline-flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 2rem;\n    text-decoration: none;\n    span {\n      font-weight: 500;\n      font-size: 1.5rem;\n      color: ${Color.light};\n      line-height: 1;\n      &:last-of-type {\n        font-size: 0.9rem;\n        margin-top: 4px;\n      }\n    }\n    &:first-of-type {\n      margin-top: 0;\n    }\n  }\n  /* ---------- */\n  /* TB */\n  @media screen and (max-width: 1024px) {\n  }\n  /* TB */\n  @media screen and (max-width: 1023px) {\n    width: 100%;\n  }\n`;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport styled from \"@emotion/styled\";\nimport { Color } from \"../../utils/color\";\nimport { FooterNavList } from \"../../utils/footerNavList\";\n\nexport const EnFooter = () => {\n  return (\n    <SFooter>\n      <SFooterNav>\n        {FooterNavList.map(({ enHref, enLabel, key }) => {\n          return (\n            <Link to={enHref} key={key}>\n              {enLabel}\n            </Link>\n          );\n        })}\n      </SFooterNav>\n      <SFooterBar>\n        <p>This site is a demo site.</p>\n        <span>Demand Link Co.,Ltd.</span>\n      </SFooterBar>\n    </SFooter>\n  );\n};\n\nconst SFooter = styled.footer`\n  border-top: 1px solid ${Color.gray};\n  background-color: ${Color.light};\n  padding: 2rem;\n  /* SP */\n  @media screen and (max-width: 599px) {\n    padding: 2rem 1rem;\n  }\n`;\n\nconst SFooterNav = styled.nav`\n  display: flex;\n  justify-content: center;\n  a {\n    font-size: 0.9rem;\n    text-decoration: none;\n    margin: 0 1rem;\n    &:hover {\n      text-decoration: underline;\n      color: ${Color.primary};\n    }\n  }\n\n  /* SP */\n  @media screen and (max-width: 599px) {\n    a {\n      margin: 0 0.5rem;\n    }\n  }\n`;\n\nconst SFooterBar = styled.div`\n  font-size: 0.9rem;\n  line-height: 1;\n  text-align: center;\n  margin-top: 2rem;\n  p {\n    line-height: 1;\n    margin-bottom: 0.5rem;\n  }\n`;\n","import React from \"react\";\nimport \"../../styles/global.css\";\nimport styled from \"@emotion/styled\";\nimport { EnHeader } from \"../header/enHeader\";\nimport { EnGlobalNav } from \"../nav/enGlobalNav\";\nimport { EnFooter } from \"../footer/enFooter\";\nimport { Seo } from \"../seo/seo\";\nimport { NavToggleProvider } from \"../providers/navToggleProvider\";\n\nexport const EnLayout = (props) => {\n  return (\n    <NavToggleProvider>\n      <Seo title={props.title} lang=\"en\" />\n      <EnHeader jpUrl={props.jpUrl} enUrl={props.enUrl} />\n      <EnGlobalNav />\n      <SMain>{props.children}</SMain>\n      <EnFooter />\n    </NavToggleProvider>\n  );\n};\n\nconst SMain = styled.main``;\n"],"names":["EnHeaderNav","SHeaderNav","NavList","enHref","enLabel","key","to","Color","EnHeader","props","SHeader","homeUrl","jpUrl","enUrl","langTxt","EnGlobalNav","useContext","NavToggleContext","toggle","setToggle","onClickCloseNav","SGlobalNav","SCompany","SNav","label","onClick","EnFooter","SFooter","SFooterNav","FooterNavList","SFooterBar","EnLayout","title","lang","SMain","children"],"sourceRoot":""}